#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <16>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td3: td3 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&thl2 5 ESCAPE>, <&thl2 6 ESCAPE>, <&tog 5>;

            label = "tap dance";
            tapping-term-ms = <200>;
        };

        th: th {
            compatible = "zmk,behavior-hold-tap";
            label = "Tap and hold";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };

        thl: thl {
            compatible = "zmk,behavior-hold-tap";
            label = "tap hold layer";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick-tap-ms = <160>;
            hold-trigger-key-positions = <33 32 18 17 16 15 14 1 2 3 5 4 30 23 24 9 25 31>;
        };

        tdQ: tdQ {
            compatible = "zmk,behavior-tap-dance";
            label = "TDQ";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&th PIPE BACKSLASH>;

            tapping-term-ms = <180>;
        };

        thl2: thl2 {
            compatible = "zmk,behavior-hold-tap";
            label = "Tap Hold Layer 2";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <170>;
            flavor = "balanced";
        };

        thc: thc {
            compatible = "zmk,behavior-hold-tap";
            label = "Tap Hold Curcor";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        td2: td2 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD2";
            #binding-cells = <0>;
            bindings = <&th LSHFT ESC>, <&kp LCTRL>;

            tapping-term-ms = <200>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        Main {
            display-name = "QWERTY";
            bindings = <
&th LEFT_WIN TAB  &tdQ          &kp W  &kp E  &kp R              &kp T                                &kp UP                &kp Y          &kp U              &kp I              &kp O            &kp P                    &thc RG(SLASH) BACKSPACE
&kp LEFT_SHIFT    &kp A         &kp S  &kp D  &kp F              &kp G                      &kp LEFT  &kp ENTER  &kp RIGHT  &kp H          &kp J              &kp K              &kp L            &thc SEMICOLON UP_ARROW  &th COLON MINUS
&kp LCTRL         &kp LEFT_ALT  &kp Z  &kp X  &kp C              &kp V         &kp SPACE              &kp DOWN              &kp B          &kp N              &kp M              &thc COMMA LEFT  &thc PERIOD DOWN         &thc SLASH RIGHT
                                       &td3   &thl2 2 BACKSPACE  &thl 3 SPACE                                               &thl2 4 ENTER  &thl2 2 BACKSPACE  &th RSHIFT ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        iOS {
            display-name = "QWERTY";
            bindings = <
&th LCTRL TAB   &tdQ          &kp W  &kp E  &kp R              &kp T                                &kp UP                &kp Y          &kp U              &kp I           &kp O            &kp P                    &thc RG(SLASH) BACKSPACE
&kp LEFT_SHIFT  &kp A         &kp S  &kp D  &kp F              &kp G                      &kp LEFT  &kp ENTER  &kp RIGHT  &kp H          &kp J              &kp K           &kp L            &thc SEMICOLON UP_ARROW  &th COLON MINUS
&kp LEFT_GUI    &kp LEFT_ALT  &kp Z  &kp X  &kp C              &kp V         &kp SPACE              &kp DOWN              &kp B          &kp N              &kp M           &thc COMMA LEFT  &thc PERIOD DOWN         &thc SLASH RIGHT
                                     &td3   &thl2 2 BACKSPACE  &thl 3 SPACE                                               &thl2 4 ENTER  &thl2 2 BACKSPACE  &thl2 5 ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Number {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1            &kp N2            &kp N3      &kp N4          &kp N5                                         &mmv MOVE_UP                     &kp N6                          &kp N7            &kp N8            &kp N9             &kp N0      &kp DEL
&trans  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(N3)  &kp LS(N4)      &kp LS(N5)                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LS(NUMBER_6)                &kp LS(NUMBER_7)  &kp LS(N8)        &kp LS(N9)         &kp LS(N0)  &kp EXCLAMATION
&trans  &trans            &kp TILDE         &kp GRAVE   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp C_MUTE                    &mmv MOVE_DOWN                   &th SINGLE_QUOTE DOUBLE_QUOTES  &kp AT            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp PERIOD  &kp QUESTION
                                            &trans      &trans          &trans                                                                          &trans                          &trans            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Function {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp F1         &kp F2             &kp F3  &kp F4   &kp F5                             &mmv MOVE_UP                     &kp PAGE_UP    &none           &kp UP_ARROW  &none      &kp HOME  &kp BSPC
&trans  &kp F6         &kp F7             &kp F8  &kp F9   &kp F10            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp END   &none
&trans  &kp LC(SPACE)  &kp LC(LS(SPACE))  &none   &kp F11  &kp F12  &trans                    &mmv MOVE_DOWN                   &none          &none           &kp SPACE     &none      &none     &none
                                          &trans  &trans   &trans                                                              &trans         &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Mouse {
            display-name = "Fn";
            bindings = <
&trans  &none   &none  &none        &none   &none                                 &mmv MOVE_UP                     &msc SCRL_UP     &mkp MB1         &mmv MOVE_UP    &mkp MB2         &none  &none
&trans  &none   &none  &none        &none   &none                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &msc SCRL_DOWN   &mmv MOVE_LEFT   &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &none
&trans  &trans  &none  &bootloader  &none   &none   &kp C_MUTE                    &mmv MOVE_DOWN                   &th LC(R) SPACE  &kp LS(LC(TAB))  &mkp MB3        &kp LC(TAB)      &none  &kp LC(W)
                       &trans       &trans  &trans                                                                 &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Ten-key {
            bindings = <
&trans  &none     &kp UP    &none      &none  &none                  &none         &kp N7     &kp N8  &kp N9   &kp PLUS         &kp MINUS      &kp BACKSPACE
&trans  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none           &none  &none  &none  &kp N4     &kp N5  &kp N6   &kp KP_MULTIPLY  &kp KP_DIVIDE  &none
&trans  &trans    &none     &none      &none  &none  &none           &none         &kp N1     &kp N2  &kp N3   &kp EQUAL        &none          &kp KP_NUMLOCK
                            &td3       &none  &none                                &kp ENTER  &kp N0  &kp DOT
            >;
        };

        Bluetooth {
            bindings = <
&soft_off       &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                   &none         &none  &none  &none  &none  &none  &none
&none           &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4           &none  &none  &none  &none  &none  &none  &none  &none  &none
&bt BT_CLR_ALL  &none          &none          &none          &none          &out OUT_TOG   &none           &none         &none  &none  &none  &none  &none  &none
                                              &none          &none          &none                                        &none  &none  &none
            >;
        };
    };
};
